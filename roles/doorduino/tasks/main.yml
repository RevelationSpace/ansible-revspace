---
# tasks file for doorduino

  - name: Create 'pi' group
    group: gid=1000 name=pi state=present system=no
    tags:
      - user

  - name: Create 'pi' user
    user: comment='Doorduino User' group=pi createhome=yes name=pi password="{{passwordpi}}" state=present update_password=always shell=/bin/ash
    tags:
      - user

  - name: Install required software (OpenWRT)
    when: "ansible_distribution == 'OpenWrt'"
    opkg: name={{item}} state=installed
    with_items:
      - ash
      - perl
      - screen
      - strace
      - sudo
      - perlbase-essential
      - perlbase-autoloader
      - perlbase-config
      - perlbase-digest
      - perlbase-dynaloader
      - perlbase-errno
      - perlbase-fcntl
      - perlbase-file
      - perlbase-integer
      - perlbase-io
      - perlbase-posix
      - perlbase-selectsaver
      - perlbase-socket
      - perlbase-symbol
      - perlbase-sys
      - perlbase-tie
      - perlbase-xsloader
      - coreutils-stty
      - curl
      - kmod-usb-core
      - kmod-usb2
      - kmod-usb-serial
      - kmod-usb-serial-ftdi
      - avrdude
    tags:
       - opkg
       - package

  - name: Install required software (Debian)
    when: "ansible_distribution == 'Debian'"
    apt: name={{item}} state=installed
    with_items:
      - perl
      - screen
      - strace
      - sudo
      - rsync
      - git
      - curl
      - perl
      - perl-modules
      - python
      - avrdude
    tags:
      - apt
      - package

  - name: Install required software (raspi/fedora)
    when: "ansible_distribution == 'Fedora'"
    yum: name={{item}} state=installed
    with_items:
      - perl
      - sudo
      - curl
      - avrdude
      - FIXME
    tags:
       - yum
       - package

  - name: Create udev rules
    copy: src=udev-99-doorduino.rules dest=/etc/udev/rules.d/99-doorduino.rules
    tags:
      - udev

  - name: Create directories for doorduino
    file: name={{item}} state=directory owner=pi group=pi
    with_items:
      - /home/pi/ibuttons.acl.d 
    tags:
      - directory

  - name: Download latest doorduino.pl
    copy: src={{item}} dest=/home/pi/{{item}} mode=0755 owner=pi group=pi
    with_items:
      - doorduino.pl
      - restartloop.sh
      - avrdude.conf
    tags:
      - copy
      - doorduino

  - name: Create ircname files
    template: src=ircname.j2 dest="/home/pi/ircname.doorduino_{{item.serial}}"
    with_items:
      - "{{doorduinos}}"
    tags:
      - doorduino

  - name: Create @reboot cronjob to start doorduino service (FIXME, Systemd unit files)
    cron: special_time=reboot user=pi job="screen -dmS {{item.name}} /home/pi/restartloop.sh /dev/doorduino_{{item.serial}}" name="doorduino_{{item.name}}"
    with_items:
      - "{{doorduinos}}"
    tags:
      - cron
      - service

